#!/usr/bin/env zsh

#myset
#eval
export PATH="/usr/local/bin:$PATH"
export PATH="/usr/local/sbin:$PATH"
export HOMEBREW_CASK_OPTS="--verbose --appdir=/Applications --audio_unit_plugindir=/Library/Audio/Plug-Ins/Components --vst_plugindir=/Library/Audio/Plug-Ins/VST"
export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
export PATH="/usr/local/opt/gnu-tar/libexec/gnubin:$PATH"

export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"

#env
eval "$(pyenv init -)"
eval "$(rbenv init -)"

#Brewfile オリジナルのbrewコマンドを使った後に 自動でBrewfileをアップデートするようにする
if [ -f $(brew --prefix)/etc/brew-wrap ];then
  source $(brew --prefix)/etc/brew-wrap
fi

# Fanction
my-load-starter-plugin-list() {
  zgen reset
  echo "creating a my zgen save"
  ZGEN_LOADED=()
  ZGEN_COMPLETIONS=()

  #zgen oh-my-zsh
  zgen prezto
  zgen prezto prompt theme 'cloud'
  zgen prezto gnu-utility
  zgen prezto git
  zgen prezto osx
  zgen prezto rsync
  zgen prezto homebrew

  # If you want to customize your plugin list, create a file named
  # .zgen-local-plugins in your home directory. That file will be sourced
  # during startup *instead* of running this load-starter-plugin-list function,
  # so make sure to include everything from this function that you want to keep.

  # If zsh-syntax-highlighting is bundled after zsh-history-substring-search,
  # they break, so get the order right.
  zgen load zsh-users/zsh-syntax-highlighting
  zgen load zsh-users/zsh-history-substring-search

  # Set keystrokes for substring searching
  zmodload zsh/terminfo
  bindkey "$terminfo[kcuu1]" history-substring-search-up
  bindkey "$terminfo[kcud1]" history-substring-search-down

  # Tab complete rakefile targets
  #zgen load unixorn/rake-completion.zshplugin

  # Automatically run zgen update and zgen selfupdate every 7 days
  zgen load unixorn/autoupdate-zgen

  zgen load unixorn/jpb.zshplugin

  zgen load unixorn/tumult.plugin.zsh

  # Warn you when you run a command that you've got an alias for
  zgen load djui/alias-tips

  # Add my collection of git helper scripts
  zgen load unixorn/git-extra-commands

  # A collection of scripts that might be useful to sysadmins
  zgen load skx/sysadmin-util

  # Adds aliases to open your current repo & branch on github.
  zgen load peterhurford/git-it-on.zsh

  # Tom Limoncelli's tooling for storing private information (keys, etc)
  # in a repository securely by encrypting them with gnupg
  zgen load StackExchange/blackbox

  # Load some oh-my-zsh plugins
  #zgen oh-my-zsh plugins/pip
  #zgen oh-my-zsh plugins/sudo
  #zgen oh-my-zsh plugins/aws
  #zgen oh-my-zsh plugins/brew
  #zgen oh-my-zsh plugins/chruby
  #zgen oh-my-zsh plugins/colored-man-pages
  #zgen oh-my-zsh plugins/git
  #zgen oh-my-zsh plugins/github
  #zgen oh-my-zsh plugins/osx
  #zgen oh-my-zsh plugins/python
  #zgen oh-my-zsh plugins/rsync
  #zgen oh-my-zsh plugins/screen
  #zgen oh-my-zsh plugins/vagrant

  #zgen oh-my-zsh themes/wezm

  # A set of shell functions to make it easy to install small apps and
  # utilities distributed with pip.
  zgen load sharat87/pip-app

  zgen load chrissicool/zsh-256color

  # Load more completion files for zsh from the zsh-lovers github repo
  zgen load zsh-users/zsh-completions src

  # Docker completion
  #zgen load srijanshetty/docker-zsh

  # Load me last
  GENCOMPL_FPATH=$HOME/.zsh/complete

  # Very cool plugin that generates zsh completion functions for commands
  # if they have getopt-style help text. It doesn't generate them on the fly,
  # you'll have to explicitly generate a completion, but it's still quite cool.
  zgen load RobSis/zsh-completion-generator

  # k is a zsh script / plugin to make directory listings more readable,
  # adding a bit of color and some git status information on files and directories
  zgen load rimraf/k

  # Bullet train prompt setup
  #zgen load caiogondim/bullet-train-oh-my-zsh-theme bullet-train

  # Save it all to init script
  zgen save
}

function pecd {
    local dir="$( find . -maxdepth 1 -type d | sed -e 's;\./;;' | peco )"
    if [ ! -z "$dir" ] ; then
        cd "$dir"
    fi
}
#brew-outdated-update (){
#  brew unlink `brew outdated`
#  brew install `brew outdated`
#}

curl-with-token() {
  EMAIL_ADRESS=$1
  PASSWORD=$2
  FILE_NAME=$3
  LOGIN_URL=$4
  FIlE_URL=$5
  echo $LOGIN_URL
  curl -L -c cookie.txt -o output.html "$LOGIN_URL"
  TOKEN=`cat output.html | grep -e '<input type="hidden" name="t" value=".*" />' | grep -o 'value=".*"' | grep -o '".*"' | grep -o '[^"].*[^"]'`
  curl -L -b cookie.txt -c login_cookie.txt -o output.html \
    --data-urlencode "t=$TOKEN" \
    --data-urlencode "login_email=$EMAIL_ADRESS" \
    --data-urlencode "login_password=$PASSWORD" \
   "$LOGIN_URL"
   curl -L -b login_cookie.txt "$FIlE_URL$FILE_NAME"
}

docker-demon-start() {
  eval "$(docker-machine env $1)"
}

docker-login() {
  docker exec -it $1 /bin/bash
}

brew-cask-token-create() {
  filename=`"$(brew --repository)/Library/Taps/caskroom/homebrew-cask/developer/bin/generate_cask_token" $1  | grep rb | awk '{print $4}'`
  #echo $filepath
  brew cask create $filename
  mv "$(brew --repository)/Library/Taps/caskroom/homebrew-cask/casks/$filename" "$2"
}

brew-cask-pr() {
  brew cask style --fix $1
  brew cask audit --download $1
  brew cask install $1
  brew cask uninstall $1
  echo 'cask check complite'
}

#ailas
alias top='top -u'
#alias brew-cask-clean-outdated='for c in /opt/homebrew-cask/Caskroom/*; do vl=(`ls -t $c`) && for v in "${vl[@]:1}"; do rm -rf "$c/$v"; done; done'
#alias brew-cask-update='for c in `brew cask list`; do ! brew cask info $c | grep -qF "Not installed" || brew cask install $c; done && brew-cask-clean-outdated'
alias brew-cask-upgrade='brew file cask_upgrade -C'
alias brew-upgrade-list='for c in `brew cask list`; do ! brew cask info $c | grep -qF "Not installed" || echo $c; done'
alias generate-cask-token='$(brew --repository)/Library/Taps/caskroom/homebrew-cask/developer/bin/generate_cask_token'
alias dockerd='docker-demon-start default'
alias dloginweb='docker-login webserver'

#初回起動時にzgenをリセット。更新した場合は手動でzgen reset
if [ ! `cat $HOME/.zgen/init.zsh | grep 'ZSH=/Users/yutaro/.zgen/sorin-ionescu/prezto-master'` ]; then
  my-load-starter-plugin-list
fi
