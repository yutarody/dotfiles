#!/usr/bin/env zsh

#myset
export PATH="/usr/local/bin:$PATH"
export PATH="/usr/local/sbin:$PATH"
export HOMEBREW_CASK_OPTS="--appdir=/Applications --audio_unit_plugindir=/Library/Audio/Plug-Ins/Components --vst_plugindir=/Library/Audio/Plug-Ins/VST"
export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
export PATH="/usr/local/opt/gnu-tar/libexec/gnubin:$PATH"

export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

#ailas
alias top='top -u'
alias brew-cask-clean-outdated='for c in /opt/homebrew-cask/Caskroom/*; do vl=(`ls -t $c`) && for v in "${vl[@]:1}"; do rm -rf "$c/$v"; done; done'
alias brew-cask-update='for c in `brew cask list`; do ! brew cask info $c | grep -qF "Not installed" || brew cask install $c; done && brew-cask-clean-outdated'
alias generate-cask-token='$(brew --repository)/Library/Taps/caskroom/homebrew-cask/developer/bin/generate_cask_token'

#Brewfile オリジナルのbrewコマンドを使った後に 自動でBrewfileをアップデートするようにする
if [ -f $(brew --prefix)/etc/brew-wrap ];then
  source $(brew --prefix)/etc/brew-wrap
fi

# Fanction
function pecd {
    local dir="$( find . -maxdepth 1 -type d | sed -e 's;\./;;' | peco )"
    if [ ! -z "$dir" ] ; then
        cd "$dir"
    fi
}
brew-outdated-update (){
  brew unlink `brew outdated`
  brew install `brew outdated`
}

curl-with-token() {
  EMAIL_ADRESS=$1
  PASSWORD=$2
  FILE_NAME=$3
  LOGIN_URL=$4
  FIlE_URL=$5
  echo $LOGIN_URL
  curl -L -c cookie.txt -o output.html "$LOGIN_URL"
  TOKEN=`cat output.html | grep -e '<input type="hidden" name="t" value=".*" />' | grep -o 'value=".*"' | grep -o '".*"' | grep -o '[^"].*[^"]'`
  curl -L -b cookie.txt -c login_cookie.txt -o output.html \
    --data-urlencode "t=$TOKEN" \
    --data-urlencode "login_email=$EMAIL_ADRESS" \
    --data-urlencode "login_password=$PASSWORD" \
   "$LOGIN_URL"
   curl -L -b login_cookie.txt "$FIlE_URL$FILE_NAME"
}
